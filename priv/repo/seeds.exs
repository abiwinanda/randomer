# Script for populating the database. You can run it as:
#
#     mix run priv/repo/seeds.exs
#
# Inside the script, you can read and write to any of your
# repositories directly:
#
#     Randomer.Repo.insert!(%Randomer.SomeSchema{})
#
# We recommend using the bang functions (`insert!`, `update!`
# and so on) as they will fail if something goes wrong.
alias Randomer.Repo
alias Randomer.Users.User

Repo.transaction(
  fn ->
    # Create 1_000_000 users with 0 points
    1..1_000_000
    |> Stream.map(fn _ ->
      {:ok, current_time} = DateTime.utc_now() |> DateTime.from_naive("Etc/UTC")
      current_time = DateTime.truncate(current_time, :second)

      # id will be autogenerated by postgres
      %{
        points: 0,
        inserted_at: current_time,
        updated_at: current_time
      }
    end)
    # batch insert the user to reduce the number of calls to DB
    |> Stream.chunk_every(20_000)
    |> Stream.each(fn batch ->
      Repo.insert_all(User, batch, on_conflict: :nothing)
    end)
    |> Enum.to_list()
  end,
  # use :infinity for :timeout since we are inserting a lot of data
  timeout: :infinity
)
